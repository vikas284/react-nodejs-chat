{"version":3,"sources":["components/Header/Header.module.css","pages/Chat/Chat.module.css","components/Header/Header.js","components/Header/index.js","components/AddUser/AddUser.js","components/AddUser/index.js","pages/Home/Home.js","pages/Home/index.js","pages/Chat/Chat.js","pages/Chat/index.js","Actions/actions.js","Reducers/reducers.js","App.js","Stores/store.js","serviceWorker.js","index.js","components/AddUser/AddUser.module.css","pages/Home/Home.module.css"],"names":["module","exports","Header","props","state","name","to","React","Component","defaultProps","AddUser","initialValues","email","password","onSubmit","values","setSubmitting","dispatch","type","data","validationSchema","Yup","shape","required","min","matches","touched","errors","isSubmitting","handleChange","handleBlur","handleSubmit","Form","Row","Col","md","sm","Group","controlId","Label","Control","placeholder","value","onChange","onBlur","className","styles","submitBut","Button","variant","color","disabled","connect","Home","fetch","then","res","json","users","console","log","root","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","TableBody","this","usersList","map","user","key","scope","firstName","lastName","city","age","Chat","chatuserList","defaultState","rootReducer","action","actions","initialState","reduxStore","window","REDUX_INITIAL_DATA","createStore","composeWithDevTools","applyMiddleware","logger","App","store","exact","path","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9e266acc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Header_root__2-tDZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Chat_root__2Bv_4\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Header.module.css';\nimport {Link} from 'react-router-dom'\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: `Header Component works`\n    };\n  }\n  render() {\n    return (\n      <ul>\n        <li>\n          <Link to=\"/\"> Users </Link>\n        </li>\n        <li>\n          <Link to=\"/chat\"> Chat </Link>\n        </li>\n      </ul>\n    );\n  }\n};\n\nHeader.defaultProps = {\n\n};\n\nHeader.propTypes = {\n\n};\n\nexport default Header;\n","import Header from './Header';\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './AddUser.module.css';\nimport { Formik } from \"formik\";\nimport * as EmailValidator from \"email-validator\";\nimport * as Yup from \"yup\";\n//import { Button } from 'react-bootstrap';\nimport Button from '@material-ui/core/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport { connect } from 'react-redux';\n\nexport class AddUser extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (<Formik\n      initialValues={{ email: \"\", password: \"\" }}\n      onSubmit={(values, { setSubmitting }) => {\n        this.props.dispatch({ type: 'add_user', data: values });\n        setSubmitting(false);\n      }}\n      validationSchema={Yup.object().shape({\n        email: Yup.string()\n          .email()\n          .required(\"Required\"),\n        password: Yup.string()\n          .required(\"No password provided.\")\n          .min(8, \"Password is too short - should be 8 chars minimum.\")\n          .matches(/(?=.*[0-9])/, \"Password must contain a number.\")\n      })}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit\n        } = props;\n\n        return (\n          <Form onSubmit={handleSubmit}>\n            <Row>\n              <Col md={5} sm={6}>\n                <Form.Group controlId=\"email\">\n                  <Form.Label>Email address</Form.Label>\n                  <Form.Control type=\"email\" name=\"email\" placeholder=\"Enter email\" value={values.email}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    className={errors.email && touched.email && \"error\"} />\n                </Form.Group>\n              </Col>\n              <Col md={5} sm={6}>\n                <Form.Group controlId=\"password\">\n                  <Form.Label>Password</Form.Label>\n                  <Form.Control type=\"password\" name=\"password\" placeholder=\"Enter password\" value={values.password}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    className={errors.password && touched.password && \"error\"} />\n                </Form.Group>\n              </Col>\n              <Col md={2} className={styles.submitBut}>\n                <Form.Group controlId=\"password\">\n                  <Form.Label></Form.Label>\n                  <Button variant=\"contained\" color=\"primary\" type=\"submit\" disabled={isSubmitting}>Add</Button>\n                </Form.Group>\n              </Col>\n            </Row>\n          </Form>\n        );\n      }}\n    </Formik>)\n  }\n};\n\nAddUser.defaultProps = {\n\n};\n\nAddUser.propTypes = {\n\n};\n\n\nexport default connect()(AddUser);","import AddUser from './AddUser';\n\nexport default AddUser;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Home.module.css';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { AddUser } from '../../components/index';\nimport { connect } from 'react-redux';\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  componentDidMount() {\n    fetch('/users')\n      .then(res => res.json())\n      .then(users =>{console.log(\"API Users\",users)} );\n  }\n  render() {\n    return (\n      <div className={styles.root}>\n        <div>\n          <AddUser />\n          <TableContainer component={Paper}>\n            <Table aria-label=\"simple table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>Email</TableCell>\n                  <TableCell>Password</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {this.props.usersList.map((user) => (\n                  <TableRow key={user.email}>\n                    <TableCell component=\"th\" scope=\"row\">\n                      {user.email}\n                    </TableCell>\n                    <TableCell>{user.password}</TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </div>\n      </div>\n    );\n  }\n};\n\nHome.defaultProps = {\n  firstName: \"Vikas\",\n  lastName: \"Garg\",\n  city: \"bangalore Kagdsspura\",\n  age: 29\n\n};\n\nHome.propTypes = {\n  age: PropTypes.number\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    usersList: state.usersList\n  };\n}\nexport default connect(mapStateToProps)(Home);\n","import Home from './Home';\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Chat.module.css';\nimport { connect } from 'react-redux';\n\nclass Chat extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: `Chat  Component works!`\n    };\n  }\n  render() {\n    return (\n      <div>\n        <h1>{this.state.name}</h1>\n        {this.props.chatuserList.map((user) => (\n          <ul key={user.email}><li>{user.email} {user.password}</li></ul> \n        ))}\n      </div>\n    );\n  }\n};\n\nChat.defaultProps = {\n\n};\n\nChat.propTypes = {\n\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    chatuserList: state.usersList\n  };\n}\nexport default connect(mapStateToProps)(Chat);\n","import Chat from './Chat';\n\nexport default Chat;\n","const ADD_USER = 'add_user';\r\nconst REMOVE_USER = 'remove_user';\r\n\r\n\r\nconst addUser = userData => ({\r\n    type: ADD_USER,\r\n    data: userData\r\n});\r\n\r\nconst deleteUser = index => ({\r\n    type: REMOVE_USER,\r\n    index: index\r\n});\r\n\r\nexport default { addUser, deleteUser, ADD_USER, REMOVE_USER };","import actions from '../Actions/actions';\r\n\r\nconst defaultState = {\r\n    usersList: []\r\n};\r\n\r\nfunction rootReducer(state = defaultState, action) {\r\n    switch (action.type) {\r\n        case actions.ADD_USER:\r\n            return {\r\n                usersList: [...state.usersList, action.data]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default rootReducer;","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport './App.css';\nimport { Header } from './components/index';\nimport Home from './pages/Home'\nimport {  Chat } from './pages/index';\n\nimport { Provider as ReduxProvider } from \"react-redux\";\nimport configureStore from \"./Stores/store\";\n\nconst reduxStore = configureStore(window.REDUX_INITIAL_DATA);\n\nfunction App() {\n  return (\n    <ReduxProvider store={reduxStore}>\n      <Router>\n        <div>\n          <Header></Header>\n          <Route exact path='/' component={Home}></Route>\n          <Route exact path='/chat' component={Chat}></Route>\n        </div>\n      </Router>\n    </ReduxProvider>\n  );\n}\n\nexport default App;\n","import { createStore, applyMiddleware } from 'redux';\r\nimport logger from \"redux-logger\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\n\r\nimport rootReducer from '../Reducers/reducers';\r\n\r\nexport default function configureStore(initialState) {\r\n    const store = createStore(rootReducer, initialState,composeWithDevTools( applyMiddleware(logger)));\r\n    return store;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.min.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"submitBut\":\"AddUser_submitBut__hLvQ7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Home_root__1Mjsm\"};"],"sourceRoot":""}